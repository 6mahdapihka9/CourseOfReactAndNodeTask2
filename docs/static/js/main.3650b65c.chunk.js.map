{"version":3,"sources":["actions/index.js","components/footer/link/Link.js","components/footer/link/FilterLink.js","components/footer/Filter.js","components/todoList/todo/Todo.js","components/todoList/TodoList.js","components/todoList/VisibleTodoList.js","helpers/get.dates.from.text.js","helpers/generate.random.id.js","components/formWrappper/form/Form.js","components/formWrappper/FormWrapper.js","components/middleBlock/MiddleBlock.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/formDisplayer.js","reducers/announcerSetter.js","reducers/index.js","data/data.js","index.js"],"names":["setFormVisible","todo","type","setAnnouncerEvent","text","isError","VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","Filter","className","FilterLink","toggleTodo","deleteTodo","textDecoration","completed","name","category","dateOfCreation","toLocaleDateString","datesFromText","join","TodoList","todos","map","id","getVisibleTodos","t","Error","getDatesFromText","results","match","length","generateRandomID","result","chars","i","charAt","Math","floor","random","formDisplayer","isDataPassed","editTodo","addTodo","cancel","emptyObj","Date","React","useState","value","setValue","prevTodo","setPrevTodo","onChange","e","target","Object","keys","JSON","stringify","onSubmit","preventDefault","trim","placeholder","required","FormWrapper","event","announcerSetter","isVisible","announcer","setAnnouncer","previousEvent","setPreviousEvent","setTimeout","visibility","undefined","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.3650b65c.chunk.js","sourcesContent":["export const initTodos = todos => ({\n  type: 'INIT_TODOS',\n  todos\n})\n\nexport const addTodo = todo => ({\n  type: 'ADD_TODO',\n  todo\n})\n\nexport const editTodo = todo => ({\n  type: 'EDIT_TODO',\n  todo\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const deleteTodo = id => ({\n  type: 'DELETE_TODO',\n  id\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const setFormVisible = todo => ({\n  type: 'SET_FORM_VISIBLE',\n  todo\n})\n\nexport const setFormInvisible = () => ({\n  type: 'SET_FORM_INVISIBLE'\n})\n\nexport const setAnnouncerEvent = (text, isError) => ({\n  type: 'SET_ANNOUNCER_EVENT',\n  text,\n  isError\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({active, children, onClick}) => (\n    <button\n        onClick={onClick}\n        disabled={active}\n        style={{\n          marginLeft: '4px',\n        }}\n    >\n      {children}\n    </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link\n","import {connect} from 'react-redux'\nimport {setVisibilityFilter} from '../../../actions'\nimport Link from './Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport FilterLink from './link/FilterLink'\nimport {VisibilityFilters} from '../../actions'\n\nconst Filter = () => (\n    <div className={'wrapper'}>\n      <span>Show: </span>\n      <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n        All\n      </FilterLink>\n      <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n        Active\n      </FilterLink>\n      <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n        Completed\n      </FilterLink>\n    </div>\n)\n\nexport default Filter\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {setAnnouncerEvent, setFormVisible} from \"../../../actions\";\nimport {connect} from \"react-redux\";\nimport './Todo.css';\n\nconst Todo = ({setFormVisible, toggleTodo, deleteTodo, todo}) => (\n    <li style={{\n      textDecoration: todo.completed ? 'line-through' : 'none'\n    }}>\n      <div>\n        {todo.name}\n      </div>\n      <div>\n        {todo.category}\n      </div>\n      <div>\n        {todo.dateOfCreation.toLocaleDateString()}\n      </div>\n      <div>\n        {todo.text}\n      </div>\n      <div>\n        {todo.datesFromText.join(', ')}\n      </div>\n      <button onClick={setFormVisible}>\n        edit\n      </button>\n      <button onClick={toggleTodo}>\n        toggle\n      </button>\n      <button onClick={deleteTodo}>\n        delete\n      </button>\n    </li>\n)\n\nTodo.propTypes = {\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  todo: ownProps.todo\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFormVisible: () => dispatch(setFormVisible(ownProps.todo)),\n  toggleTodo: ownProps.toggleTodo,\n  deleteTodo: ownProps.deleteTodo\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Todo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './todo/Todo'\nimport './TodoList.css';\nimport {setAnnouncerEvent} from \"../../actions\";\n\n\nconst TodoList = ({todos, toggleTodo, deleteTodo, dispatch}) => (\n    <div className={'wrapper'}>\n      <ul>\n        {todos.map(todo =>\n            <Todo\n                key={todo.id}\n                todo={todo}\n                toggleTodo={() => {\n                  toggleTodo(todo.id)\n                  dispatch(setAnnouncerEvent(\"Todo's completed property switched successfully!\", false))\n                }}\n                deleteTodo={() => {\n                  deleteTodo(todo.id)\n                  dispatch(setAnnouncerEvent(\"Todo deleted successfully!\", false))\n                }}\n            />\n        )}\n      </ul>\n    </div>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    dateOfCreation: PropTypes.object.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n    datesFromText: PropTypes.array.isRequired,\n    category: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo } from '../../actions'\nimport TodoList from './TodoList'\nimport { VisibilityFilters } from '../../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id)),\n  deleteTodo: id => dispatch(deleteTodo(id)),\n  dispatch\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","export function getDatesFromText(text) {\n  let results = text.match(/[0-9]{1,2}([\\-\\/ \\.])[0-9]{1,2}([\\-\\/ \\.])((19)|(20))[0-9]{2}/g);\n\n  if (results && results.length)\n    return results;\n  return [];\n}\n","export function generateRandomID(length) {\n  let result = '',\n      chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_';\n\n  for (let i = 0; i < length; i++)\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n\n  return result;\n}\n","import React from 'react'\r\nimport {addTodo, editTodo, setAnnouncerEvent, setFormInvisible} from \"../../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDatesFromText} from \"../../../helpers/get.dates.from.text\";\r\nimport {generateRandomID} from \"../../../helpers/generate.random.id\";\r\n\r\nconst Form = ({todo, onClick, cancel, dispatch}) => {\r\n  let emptyObj = {\r\n    id: -1,\r\n    name: '',\r\n    category: 'Task',\r\n    dateOfCreation: new Date(),\r\n    text: '',\r\n    datesFromText: [],\r\n    completed: false\r\n  }\r\n\r\n  let [value, setValue] = React.useState(emptyObj);\r\n  let [prevTodo, setPrevTodo] = React.useState({})\r\n\r\n  if (!!todo && !!Object.keys(todo).length && JSON.stringify(prevTodo) !== JSON.stringify(todo)) {\r\n    setPrevTodo({\r\n      ...prevTodo,\r\n      ...todo\r\n    })\r\n    setValue({\r\n      ...value,\r\n      ...todo\r\n    })\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault()\r\n\r\n    if (!value.name.trim() ||\r\n        !value.category.trim() ||\r\n        !value.text.trim())\r\n      return\r\n\r\n    onClick({\r\n      ...value,\r\n      id: (!todo) ? generateRandomID(10) : value.id,\r\n      dateOfCreation: (!todo) ? new Date() : value.dateOfCreation,\r\n      datesFromText: getDatesFromText(value.text)\r\n    }, !!todo);\r\n\r\n    dispatch(setAnnouncerEvent('Todo ' + ((!todo)? 'created' : 'edited') + ' successfully!', false))\r\n\r\n    setValue({\r\n      ...value,\r\n      id: -1,\r\n      name: '',\r\n      category: 'Task',\r\n      text: ''\r\n    })\r\n  }\r\n\r\n  function onChange(e) {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n      <form onSubmit={submitHandler}>\r\n        <input value={value.name} name={'name'} placeholder={'Name'} onChange={onChange} required/>\r\n        <select value={value.category} name={'category'} onChange={onChange} required>\r\n          <option value={'Task'}>Task</option>\r\n          <option value={'Idea'}>Idea</option>\r\n          <option value={'Quote'}>Quote</option>\r\n          <option value={'Thought'}>Thought</option>\r\n        </select>\r\n        <textarea value={value.text} name={'text'} placeholder={\"Text\"} onChange={onChange} required/>\r\n        <button onClick={cancel}>Cancel</button>\r\n        <button type=\"submit\">\r\n          {(!!todo) ? 'Edit todo' : 'Add todo'}\r\n        </button>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.formDisplayer.todo\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: (todo, isDataPassed) => {\r\n    if (isDataPassed)\r\n      dispatch(editTodo(todo))\r\n    else\r\n      dispatch(addTodo(todo))\r\n    dispatch(setFormInvisible())\r\n  },\r\n  cancel: () => dispatch(setFormInvisible()),\r\n  dispatch\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Form)\r\n","import React from 'react'\r\nimport Form from \"./form/Form\";\r\n\r\nconst FormWrapper = () => (\r\n    <div className={'form-wrapper wrapper'}>\r\n      <Form/>\r\n    </div>\r\n)\r\n\r\nexport default FormWrapper\r\n","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {setAnnouncerEvent, setFormVisible} from \"../../actions\";\r\nimport './MiddleBlock.css';\r\n\r\nconst MiddleBlock = ({dispatch, event}) => {\r\n  let emptyObj = {\r\n    text: 'Init',\r\n    isError: false,\r\n    isVisible: false\r\n  }\r\n  let [announcer, setAnnouncer] = React.useState(emptyObj)\r\n  let [previousEvent, setPreviousEvent] = React.useState({})\r\n\r\n  if (event && Object.keys(event).length && JSON.stringify(previousEvent) !== JSON.stringify(event)) {\r\n    setPreviousEvent({\r\n      ...event\r\n    })\r\n    setAnnouncer({\r\n      ...announcer,\r\n      text: event.text,\r\n      isError: event.isError,\r\n      isVisible: true\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setAnnouncer({\r\n        text: event.text,\r\n        isError: event.isError,\r\n        isVisible: false\r\n      })\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n      <div className={'wrapper middle-block'}>\r\n        <div className={'announcer ' +\r\n        ((announcer.isError) ? 'announcer-error ' : 'announcer-success ') +\r\n        ((announcer.isVisible) ? 'visible ' : 'invisible ')\r\n        }\r\n        >{announcer.text}</div>\r\n        <button onClick={() => dispatch(setFormVisible(null))}>Create todo</button>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  event: state.announcerSetter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MiddleBlock)\r\n","import React from 'react'\nimport Filter from './footer/Filter'\nimport VisibleTodoList from './todoList/VisibleTodoList'\nimport FormWrapper from \"./formWrappper/FormWrapper\"\nimport './App.css'\nimport {connect} from \"react-redux\";\nimport MiddleBlock from \"./middleBlock/MiddleBlock\";\n\nconst App = ({visibility}) => (\n    <div>\n      {(visibility) ? <FormWrapper/> : null}\n      <Filter/>\n      <VisibleTodoList/>\n      <MiddleBlock/>\n    </div>\n)\n\nconst mapStateToProps = state => ({\n  visibility: state.formDisplayer.visibility\n})\n\n\nexport default connect(\n    mapStateToProps,\n    undefined\n)(App)\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_TODOS':\n      return [\n        ...state,\n        ...action.todos\n      ]\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          ...action.todo\n        }\n      ]\n    case 'EDIT_TODO':\n      return state.map(todo =>\n          (todo.id === action.todo.id)\n              ? action.todo\n              : todo\n      )\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n          (todo.id === action.id)\n              ? {...todo, completed: !todo.completed}\n              : todo\n      )\n    case 'DELETE_TODO':\n      return state.filter(todo => todo.id !== action.id)\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import {VisibilityFilters} from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","const formDisplayer = (state = {visibility: false}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FORM_VISIBLE':\r\n      return {\r\n        ...state,\r\n        visibility: true,\r\n        todo: action.todo\r\n      }\r\n    case 'SET_FORM_INVISIBLE':\r\n      return {\r\n        visibility: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default formDisplayer\r\n","import {generateRandomID} from \"../helpers/generate.random.id\";\r\n\r\nconst announcerSetter = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_ANNOUNCER_EVENT':\r\n      return {\r\n        text: action.text,\r\n        isError: action.isError,\r\n        id: generateRandomID(3)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default announcerSetter\r\n","import {combineReducers} from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\nimport formDisplayer from \"./formDisplayer\";\nimport announcerSetter from \"./announcerSetter\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n  formDisplayer,\n  announcerSetter\n})\n","export let todos = [\r\n  {\r\n    id: \"ZDZ_XnG0Ut\",\r\n    name: 'Shopping list',\r\n    category: 'Task',\r\n    dateOfCreation: new Date(),\r\n    text: 'Tomatoes, bread',\r\n    datesFromText: [],\r\n    completed: false\r\n  },\r\n  {\r\n    id: 'WOkLYrlHDT',\r\n    name: 'The theory of evolution',\r\n    category: 'Thought',\r\n    dateOfCreation: new Date(),\r\n    text: 'The evolution is ..........',\r\n    datesFromText: [],\r\n    completed: false\r\n  },\r\n  {\r\n    id: 'ZMk3ZwiRHz',\r\n    name: 'New Feature',\r\n    category: 'Idea',\r\n    dateOfCreation: new Date(),\r\n    text: 'Implement some feature in this app',\r\n    datesFromText: [],\r\n    completed: false\r\n  },\r\n  {\r\n    id: 'sizDU41a7_',\r\n    name: 'Dentist',\r\n    category: 'Task',\r\n    dateOfCreation: new Date(),\r\n    text: \"I’m gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\r\n    datesFromText: ['3/5/2021', '5/5/2021'],\r\n    completed: false\r\n  },\r\n  {\r\n    id: 'fpOx4iIX0U',\r\n    name: 'William Gaddis',\r\n    category: 'Quote',\r\n    dateOfCreation: new Date(),\r\n    text: \"Power doesn\\'t come with bla bla bla\",\r\n    datesFromText: [],\r\n    completed: true\r\n  },\r\n  {\r\n    id: \"LI_RUnkMNo\",\r\n    name: 'Book',\r\n    category: 'Task',\r\n    dateOfCreation: new Date(),\r\n    text: 'The Lean Statrup',\r\n    datesFromText: [],\r\n    completed: true\r\n  }\r\n]\r\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport './index.css'\nimport {todos} from \"./data/data.js\";\nimport {initTodos} from \"./actions\";\n\nconst store = createStore(rootReducer)\n\nstore.dispatch(initTodos(todos))\n\nrender(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}