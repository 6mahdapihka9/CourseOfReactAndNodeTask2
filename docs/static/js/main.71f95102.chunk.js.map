{"version":3,"sources":["actions/index.js","components/footer/link/Link.js","components/footer/link/FilterLink.js","components/footer/Filter.js","helpers/generate.random.id.js","helpers/get.dates.from.text.js","components/addTodo/AddTodo.js","components/todoList/todo/Todo.js","components/todoList/TodoList.js","components/todoList/VisibleTodoList.js","components/editTodo/EditTodo.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/todoPasser.js","reducers/index.js","index.js"],"names":["VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Filter","className","FilterLink","generateRandomID","length","result","chars","i","charAt","Math","floor","random","getDatesFromText","text","results","match","undefined","add","todo","addTodo","emptyObj","id","name","category","dateOfCreation","Date","datesFromText","completed","React","useState","value","setValue","onChange","e","target","onSubmit","preventDefault","trim","required","setPassedTodo","toggleTodo","deleteTodo","textDecoration","toLocaleDateString","join","TodoList","todos","map","getVisibleTodos","t","Error","getTodoFromState","passer","Object","keys","todoPasser","edit","editTodo","prevTodo","setPrevTodo","JSON","stringify","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.71f95102.chunk.js","sourcesContent":["export const addTodo = todo => ({\n  type: 'ADD_TODO',\n  todo\n})\n\nexport const editTodo = todo => ({\n  type: 'EDIT_TODO',\n  todo\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const deleteTodo = id => ({\n  type: 'DELETE_TODO',\n  id\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const setTodoPasser = todo => ({\n  type: 'SET_TODO_FOR_EDIT',\n  todo\n})\n\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n    <button\n       onClick={onClick}\n       disabled={active}\n       style={{\n           marginLeft: '4px',\n       }}\n    >\n      {children}\n    </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../../../actions'\nimport Link from './Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport FilterLink from './link/FilterLink'\nimport { VisibilityFilters } from '../../actions'\n\nconst Filter = () => (\n  <div className={'wrapper'}>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed\n    </FilterLink>\n  </div>\n)\n\nexport default Filter\n","export function generateRandomID (length) {\n  let result = '',\n      chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_';\n\n  for (let i = 0; i < length; i++)\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n\n  return result;\n}\n","export function getDatesFromText(text){\n  let results = text.match(/[0-9]{1,2}([\\-\\/ \\.])[0-9]{1,2}([\\-\\/ \\.])((19)|(20))[0-9]{2}/g);\n\n  if (results && results.length)\n    return results;\n  return [];\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../../actions'\nimport { generateRandomID } from \"../../helpers/generate.random.id\";\nimport { getDatesFromText } from \"../../helpers/get.dates.from.text\";\n\nconst AddTodo = ({ add }) => {\n  let emptyObj = {\n    id: -1,\n    name: '',\n    category: 'Task',\n    dateOfCreation: new Date(),\n    text: '',\n    datesFromText: [],\n    completed: false\n  }\n\n  let [value, setValue] = React.useState(emptyObj)\n\n  function submitHandler(e){\n    e.preventDefault()\n\n    if (!value.name.trim() || !value.text.trim())\n      return\n\n    add({\n      ...value,\n      id: generateRandomID(10),\n      dateOfCreation: new Date(),\n      datesFromText: getDatesFromText(value.text)\n    })\n\n    setValue({\n      ...value,\n      name: '',\n      category: 'Task',\n      text: ''\n    })\n  }\n\n  function onChange(e){\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <div className={'wrapper'}>\n      <form onSubmit={submitHandler}>\n        <input value={value.name} name={'name'} onChange={onChange} required/>\n        <select value={value.category} name={'category'} onChange={onChange} required>\n          <option value={'Task'}>Task</option>\n          <option value={'Idea'}>Idea</option>\n          <option value={'Quote'}>Quote</option>\n          <option value={'Thought'}>Thought</option>\n        </select>\n        <input value={value.text} name={'text'} onChange={onChange} required/>\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  add: todo => dispatch(addTodo(todo))\n})\n\nexport default connect(\n    undefined,\n    mapDispatchToProps\n)(AddTodo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { setTodoPasser } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport './Todo.css';\n\nconst Todo = ({setPassedTodo, toggleTodo, deleteTodo, todo}) => (\n  <li style={{\n      textDecoration: todo.completed ? 'line-through' : 'none'\n    }}>\n    <div>\n      {todo.name}\n    </div>\n    <div>\n      {todo.category}\n    </div>\n    <div>\n      {todo.dateOfCreation.toLocaleDateString()}\n    </div>\n    <div>\n      {todo.text}\n    </div>\n    <div>\n      {todo.datesFromText.join(', ')}\n    </div>\n    <button onClick={setPassedTodo}>\n      edit\n    </button>\n    <button onClick={toggleTodo}>\n      toggle\n    </button>\n    <button onClick={deleteTodo}>\n      delete\n    </button>\n  </li>\n)\n\nTodo.propTypes = {\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  todo: ownProps.todo\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setPassedTodo: () => dispatch(setTodoPasser(ownProps.todo)),\n  toggleTodo: ownProps.toggleTodo,\n  deleteTodo: ownProps.deleteTodo\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Todo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './todo/Todo'\nimport './TodoList.css';\n\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo }) => (\n  <div className={'wrapper'}>\n    <ul>\n      {todos.map(todo =>\n        <Todo\n          key={todo.id}\n          todo={todo}\n          toggleTodo={() => toggleTodo(todo.id)}\n          deleteTodo={() => deleteTodo(todo.id)}\n        />\n      )}\n    </ul>\n  </div>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    dateOfCreation: PropTypes.object.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n    datesFromText: PropTypes.array.isRequired,\n    category: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo } from '../../actions'\nimport TodoList from './TodoList'\nimport { VisibilityFilters } from '../../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id)),\n  deleteTodo: id => dispatch(deleteTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { editTodo } from '../../actions'\nimport {generateRandomID} from \"../../helpers/generate.random.id\";\nimport {getDatesFromText} from \"../../helpers/get.dates.from.text\";\n\nconst EditTodo = ({ todo, edit }) => {\n  let emptyObj = {\n    id: -1,\n    name: '',\n    category: 'Task',\n    dateOfCreation: new Date(),\n    text: '',\n    datesFromText: [],\n    completed: false\n  }\n\n  let [value, setValue] = React.useState(emptyObj);\n  let [prevTodo, setPrevTodo] = React.useState({})\n\n  if (!!todo && !!Object.keys(todo).length && JSON.stringify(prevTodo) !== JSON.stringify(todo)) {\n    setPrevTodo({\n      ...prevTodo,\n      ...todo\n    })\n    setValue({\n      ...value,\n      ...todo\n    })\n  }\n\n  function submitHandler(e){\n    e.preventDefault()\n\n    if (!value.name.trim() || !value.text.trim() || !todo || !Object.keys(todo).length)\n      return\n\n    edit({\n      ...value,\n      dateOfCreation: new Date(),\n      datesFromText: getDatesFromText(value.text)\n    });\n\n    setValue({\n      ...value,\n      name: '',\n      category: 'Task',\n      text: ''\n    })\n  }\n\n  function onChange(e){\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n      <div className={'wrapper'}>\n        <form onSubmit={submitHandler}>\n          <input value={value.name} name={'name'} onChange={onChange} required/>\n          <select value={value.category} name={'category'} onChange={onChange} required>\n            <option value={'Task'}>Task</option>\n            <option value={'Idea'}>Idea</option>\n            <option value={'Quote'}>Quote</option>\n            <option value={'Thought'}>Thought</option>\n          </select>\n          <input value={value.text} name={'text'} onChange={onChange} required/>\n          <button type=\"submit\">\n            Edit Todo\n          </button>\n        </form>\n      </div>\n  )\n}\n\nfunction getTodoFromState(todo, passer){\n  if (Object.keys(passer).length !== 0)\n    return passer;\n}\n\nconst mapStateToProps = state => ({\n  todo: getTodoFromState(state.todo, state.todoPasser)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  edit: todo => dispatch(editTodo(todo))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditTodo)\n","import React from 'react'\nimport Filter from './footer/Filter'\nimport AddTodo from './addTodo/AddTodo'\nimport VisibleTodoList from './todoList/VisibleTodoList'\nimport EditTodo from \"./editTodo/EditTodo\";\nimport './App.css';\n\nconst App = () => (\n  <div>\n    <AddTodo />\n    <EditTodo />\n    <Filter />\n    <VisibleTodoList />\n  </div>\n)\n\nexport default App\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          ...action.todo\n        }\n      ]\n    case 'EDIT_TODO':\n      return state.map(todo =>\n        (todo.id === action.todo.id)\n          ? action.todo\n          : todo\n      )\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      )\n    case 'DELETE_TODO':\n      return state.filter(todo => todo.id !== action.id)\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  // console.log(action.filter);\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","\nconst todoPasser = (state = {}, action) => {\n  // console.log(action.todo);\n  switch (action.type) {\n    case 'SET_TODO_FOR_EDIT':\n      return action.todo\n    default:\n      return state\n  }\n}\n\nexport default todoPasser\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\nimport todoPasser from \"./todoPasser\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n  todoPasser\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport './index.css'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}